datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

model Album {
  id        Int     @id @default(autoincrement())
  title     String
  artist    Artist? @relation(fields: [artist_id], references: [id])
  artist_id Int?

  @@map("albums")
  @@index([title])
}

model Artist {
  id       Int     @id @default(autoincrement())
  name     String

  album    Album[]

  @@map("artists")
  @@index([name])
}

model Customer {
  id           Int     @id @default(autoincrement())
  first_name   String
  last_name    String
  company      String?
  address      String?
  city         String?
  state        String?
  country      String?
  postal_code  String?
  phone        String?
  fax          String?
  email        String
  support_rep_id Int?

  invoice Invoice[]

  @@map("customers")
}

model Employee {
  id  Int        @id @default(autoincrement())
  last_name      String
  first_name     String
  title          String?
  reports_to_id  Int?
  birth_date     DateTime?
  hire_date      DateTime?
  address        String?
  city           String?
  state          String?
  country        String?
  postal_code    String?
  phone          String?
  fax            String?
  email          String?

  @@map("employees")
}

model Genre {
  id      Int     @id @default(autoincrement())
  name    String

  @@map("genres")
  @@index([name])
}

model Invoice {
  id                  Int        @id @default(autoincrement())
  customer            Customer?  @relation(fields: [customer_id], references: [id])
  customer_id         Int?
  invoice_date        DateTime
  billing_address     String?
  billing_city        String?
  billing_state       String?
  billing_country     String?
  billing_postal_code String?
  total               Float

  invoiceItem InvoiceItem[]
  @@map("invoices")
}

model InvoiceItem {
  id            Int     @id @default(autoincrement())
  invoice       Invoice?  @relation(fields: [invoice_id], references: [id])
  invoice_id    Int?
  track_id      Int?
  unit_price    Float
  quantity      Int

  @@map("invoice_items")
}

model MediaType {
  id  Int     @id @default(autoincrement())
  name        String

  @@map("media_types")
}

model Playlist {
  id  Int     @id @default(autoincrement())
  name        String

  playlistTrack PlaylistTrack[]

  @@map("playlists")
}

model PlaylistTrack {
  id  Int      @id @default(autoincrement())
  playlist     Playlist?  @relation(fields: [playlist_id], references: [id])
  playlist_id  Int
  track        Track?  @relation(fields: [track_id], references: [id])
  track_id     Int

  @@map("playlist_track")
}

model Track {
  id            Int      @id @default(autoincrement())
  name          String
  album_id      Int?
  media_type_id Int?
  genre_id      Int?
  composer      String?
  milliseconds  Int
  bytes         Int?
  unit_price    Float

  playlistTrack PlaylistTrack[]

  @@map("tracks")
}
